rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Resumes collection: Only authenticated users can read/write their own resumes.
    match /resumes/{resumeId} {
      // Allow read/write only if the user is authenticated and owns the document.
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;

      // Allow create only if the userId in the new document matches the authenticated user.
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['userId', 'name', 'data', 'template', 'updatedAt']) &&
        request.resource.data.name is string &&
        request.resource.data.template is string &&
        request.resource.data.updatedAt is timestamp;

      // Allow update only if the user owns the document and the fields are valid.
      allow update: if request.auth != null &&
        resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['userId', 'name', 'data', 'template', 'updatedAt']) &&
        request.resource.data.name is string &&
        request.resource.data.template is string &&
        request.resource.data.updatedAt is timestamp;

      // Allow delete only if the user owns the document.
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Deny everything else by default.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
