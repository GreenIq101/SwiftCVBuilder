{
  "rules_version": "2",
  "rules": {
    "databases": {
      "{database}": {
        "documents": {
          "resumes": {
            "{resumeId}": {
              ".read": "request.auth != null && resource.data.userId == request.auth.uid",
              ".write": "request.auth != null && resource.data.userId == request.auth.uid",
              ".create": "request.auth != null && request.resource.data.userId == request.auth.uid && request.resource.data.keys().hasAll(['userId', 'name', 'data', 'template', 'updatedAt']) && request.resource.data.name is string && request.resource.data.template is string && request.resource.data.updatedAt is timestamp",
              ".update": "request.auth != null && resource.data.userId == request.auth.uid && request.resource.data.keys().hasAll(['userId', 'name', 'data', 'template', 'updatedAt']) && request.resource.data.name is string && request.resource.data.template is string && request.resource.data.updatedAt is timestamp",
              ".delete": "request.auth != null && resource.data.userId == request.auth.uid"
            }
          },
          "users": {
            "{userId}": {
              ".read": "request.auth != null && request.auth.uid == {userId}",
              ".write": "request.auth != null && request.auth.uid == {userId}"
            }
          },
          "templates": {
            "{templateId}": {
              ".read": "request.auth != null && resource.data.userId == request.auth.uid",
              ".write": "request.auth != null && resource.data.userId == request.auth.uid",
              ".create": "request.auth != null && request.resource.data.userId == request.auth.uid",
              ".update": "request.auth != null && resource.data.userId == request.auth.uid",
              ".delete": "request.auth != null && resource.data.userId == request.auth.uid"
            }
          },
          "{document=**}": {
            ".read": false,
            ".write": false
          }
        }
      }
    }
  }
}
